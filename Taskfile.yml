---
version: '3'

includes:
  theme: ThemeTasks.yml

vars:
  ALACRITTY_CONFIG_DIR: ~/.config/alacritty
  HELIX_CONFIG_DIR: ~/.config/helix
  NEOVIM_CONFIG_DIR: ~/.config/nvim
  VIMRC_PATH: ~/.vimrc
  WEZTERM_PATH: ~/.wezterm.lua
  ZSHRC_PATH: ~/.zshrc

tasks:
  install-starship:
    desc: Install starship
    platforms: [linux]
    status:
      - starship --version
    cmds:
      - curl -sS https://starship.rs/install.sh | sh

  # yamllint disable-line rule:key-duplicates
  install-starship:
    desc: Install starship
    platforms: [darwin]
    status:
      - starship --version
    cmds:
      - brew install starship

  install-omz:
    desc: Install Oh My Zsh
    status:
      - '[ -d ~/.oh-my-zsh ]'
    cmds:
      # yamllint disable-line rule:line-length
      - sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

  link-file:
    internal: true
    desc: Create a symbolic link to a file
    requires:
      vars:
        - SOURCE_FILE
        - TARGET_FILE
    status:
      - "[ -f {{.TARGET_FILE}} ]"
    cmds:
      - ln -sv {{.SOURCE_FILE}} {{.TARGET_FILE}}

  link-dir:
    internal: true
    desc: Create symbolic links to files in a directory
    requires:
      vars:
        - SOURCE_DIR
        - TARGET_DIR
    status:
      - "[ -d {{.TARGET_DIR}} ]"
    cmds:
      - mkdir -pv {{.TARGET_DIR}}
      - ln -sv {{.SOURCE_DIR}}/* {{.TARGET_DIR}}

  link-zsh:
    cmds:
      - task: link-file
        vars:
          SOURCE_FILE: "{{.USER_WORKING_DIR}}/zsh/.zshrc"
          TARGET_FILE: "{{.ZSHRC_PATH}}"

  link-alacritty:
    cmds:
      - task: link-dir
        vars:
          SOURCE_DIR: "{{.USER_WORKING_DIR}}/alacritty"
          TARGET_DIR: "{{.ALACRITTY_CONFIG_DIR}}"

  link-wezterm:
    cmds:
      - task: link-file
        vars:
          SOURCE_FILE: "{{.USER_WORKING_DIR}}/wezterm/.wezterm.lua"
          TARGET_FILE: "{{.WEZTERM_PATH}}"

  link-helix:
    cmds:
      - task: link-dir
        vars:
          SOURCE_DIR: "{{.USER_WORKING_DIR}}/helix"
          TARGET_DIR: "{{.HELIX_CONFIG_DIR}}"

  link-vim:
    cmds:
      - task: link-file
        vars:
          SOURCE_FILE: "{{.USER_WORKING_DIR}}/vim/.vimrc"
          TARGET_FILE: "{{.VIMRC_PATH}}"

  link-neovim:
    cmds:
      - task: link-dir
        vars:
          SOURCE_DIR: "{{.USER_WORKING_DIR}}/neovim"
          TARGET_DIR: "{{.NEOVIM_CONFIG_DIR}}"

  link-themes:
    summary: >
      Hardlink theme tasks as a global taskfile to be able to execute them from
      anywhere. Hardlink is required because Task does not treat symlinks as
      taskfiles.
    status:
      - "[ -f ~/Taskfile.yml ]"
    cmds:
      - ln -v {{.USER_WORKING_DIR}}/ThemeTasks.yml ~/Taskfile.yml

  bootstrap:
    desc: Bootstrap dotfiles
    deps:
      - install-omz
      - install-starship
      - link-alacritty
      - link-helix
      - link-neovim
      - link-themes
      - link-vim
      - link-wezterm
      - link-zsh

  clean-alacritty: rm -rf {{.ALACRITTY_CONFIG_DIR}}
  clean-helix: rm -rf {{.HELIX_CONFIG_DIR}}
  clean-neovim: rm -rf {{.NEOVIM_CONFIG_DIR}}
  clean-themes: rm -rf ~/Taskfile.yml
  clean-vim: rm -f {{.VIMRC_PATH}}
  clean-wezterm: rm -f {{.WEZTERM_PATH}}
  clean-zsh: rm -f {{.ZSHRC_PATH}}

  clean:
    desc: Clean up dotfiles
    summary: >
      Remove Helix, Alacritty and Neovim configuration directories as well as
      .vimrc, .zshrc and wezterm.lua files.
    cmds:
      - task: clean-alacritty
      - task: clean-helix
      - task: clean-neovim
      - task: clean-themes
      - task: clean-vim
      - task: clean-wezterm
      - task: clean-zsh

  lint-yaml:
    desc: Lint YAML files using yamllint
    aliases:
      - lint
    preconditions:
      - sh: yamllint --version
        msg: yamllint is not installed
    cmds:
      - yamllint .
